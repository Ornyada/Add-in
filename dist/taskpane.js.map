{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","Office.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n    //There is a button to create it manually because in case user want to re-create the Masterfile without importing new file\n\n    // ✅ ย้าย event listener สำหรับปุ่ม import มาไว้ที่นี่\n\n    document.getElementById(\"importFolderBtn\").addEventListener(\"click\", async () => {\n      const files = document.getElementById(\"folderInput\").files;\n      if (!files.length) {\n        alert(\"Please select a folder first.\");\n        return;\n      }\n      const formData = new FormData();\n      for (const file of files) {\n        formData.append(\"files\", file, file.webkitRelativePath);\n      }\n      await importFolder(formData);\n    });\n    const importDatalogBtn = document.getElementById(\"importDatalogBtn\");\n    if (importDatalogBtn) {\n      importDatalogBtn.addEventListener(\"click\", importFile);\n    }\n    //Select all button\n    document.getElementById(\"compareAll\").addEventListener(\"click\", async () => {\n      const checkboxes = document.querySelectorAll(\"#checkboxForm input[type='checkbox']\");\n      checkboxes.forEach((checkbox) => {\n        checkbox.checked = !checkbox.checked;\n      });\n    });\n\n    document.getElementById(\"compare\").addEventListener(\"click\", async () => {\n      const checkboxes = document.querySelectorAll(\"#checkboxForm input[type='checkbox']\");\n\n      const UncheckedNames = Array.from(checkboxes)\n        .filter((cb) => !cb.checked)\n        .map((cb) => cb.value);\n      console.log(UncheckedNames);\n\n      const checkedNames = Array.from(checkboxes)\n        .filter((cb) => cb.checked)\n        .map((cb) => cb.value);\n      console.log(checkedNames);\n\n      await checkboxHide(UncheckedNames, checkedNames);\n    });\n    /*\n    // Compare button\n    compareButton.addEventListener(\"click\", () => {\n      const selectedPairs = [];\n      document.querySelectorAll('input[name=\"stagePair\"]:checked').forEach((cb) => {\n        selectedPairs.push(cb.value);\n      });\n      console.log(\"คู่ที่เลือก:\", selectedPairs); // ตัวอย่าง: ซ่อนคอลัมน์ที่ไม่ได้ถูกเลือก\n      document.querySelectorAll(\".stage-column\").forEach((col) => {\n        if (!selectedPairs.includes(col.dataset.pair)) {\n          col.style.display = \"none\";\n        } else {\n          col.style.display = \"\";\n        }\n      });\n    });\n    */\n  }\n});\n\nexport async function run() {\n  try {\n    document.body.style.cursor = \"wait\";\n    await Excel.run(async (context) => {\n      const sheets = context.workbook.worksheets;\n      sheets.load(\"items/name\");\n      await context.sync(); //wait to finish loading first\n      const baseName = \"Masterfile\";\n      let sheetName = baseName;\n      const existingNames = sheets.items.map((s) => s.name);\n      // ให้มีมาสเตอร์ไฟล์ ไฟล์เดียว\n      if (existingNames.includes(sheetName)) {\n        //I'll be back!!!!\n      } else {\n        const newSheet = sheets.add(sheetName);\n        // รายการหัวตาราง\n        const headers = [\"Suite name\", \"Test name\", \"Test number\", \"Lsl_typ\", \"Usl_typ\", \"Units\"];\n        //ตรงนี้ต้องคำนึงถึงว่าจำนวน stage อาจจะไม่เท่ากัน ก็เดี๋ยวใช้ count นับสเตจที่แตกต่างกันรวมกับสเปคแล้วก็คูณสอง จากนั้นค่อยเขียนคอลัมน์ bin ต่อ\n        const headerRange = newSheet.getRangeByIndexes(0, 0, 1, headers.length); //determine the range of cells to input headers , index เริ่มนับที่ 0\n        headerRange.values = [headers]; //input headers into cells\n        headerRange.format.fill.color = \"#43a0ec\"; // Background of headers\n        headerRange.format.font.bold = true;\n        const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n        /*const allstages = [\n          \"Spec\",\n          \"Spec\",\n          \"wh1\",\n          \"wh1\",\n          \"wr2\",\n          \"wr2\",\n          \"wr3\",\n          \"wr3\",\n          \"wc3\",\n          \"wc3\",\n          \"wh3\",\n          \"wh3\",\n          \"wi3\",\n          \"wi3\",\n          \"ww4\",\n          \"ww4\",\n          \"ww5\",\n          \"ww5\",\n          \"fr1\",\n          \"fr1\",\n          \"fr2\",\n          \"fr2\",\n          \"fc2\",\n          \"fc2\",\n          \"fh3\",\n          \"fh3\",\n          \"ar1\",\n          \"ar1\",\n        ];\n        const allstagesRange = sheet.getRangeByIndexes(1, 6, 1, allstages.length);\n        allstagesRange.values = [allstages];*/\n        sheet.position = 0;\n        sheet.activate();\n      }\n      await context.sync();\n      document.body.style.cursor = \"default\";\n    });\n  } catch (error) {\n    console.error(\"เกิดข้อผิดพลาด:\", error);\n    logToConsole(\"เกิดข้อผิดพลาด\");\n  }\n}\n\n//*********\nasync function importFile() {\n  document.body.style.cursor = \"wait\";\n\n  try {\n    const fileInput = document.getElementById(\"fileInput\");\n    const files = fileInput.files;\n    const fileArray = Array.from(files);\n    if (!files || files.length === 0) return;\n    console.log(\"Amount of  file: %d\", fileArray.length);\n    logToConsole(\"Amount of  file: %d\", fileArray.length);\n    let file_processed = 0;\n    for (let i = 0; i < fileArray.length; i++) {\n      const file = fileArray[i];\n      const isCSV = file.name.toLowerCase().endsWith(\".csv\");\n      const isXLSX = file.name.toLowerCase().endsWith(\".xlsx\");\n      const isSTDF = file.name.toLowerCase().endsWith(\".stdf\");\n      try {\n        if (isCSV || isXLSX) {\n          console.log(\"file CSV or XLSX is processing\");\n          logToConsole(\"file CSV or XLSX is processing\");\n          //write file name in InputFiles Sheet\n          /*await Excel.run(async (context) => {\n            let sheets = context.workbook.worksheets;\n            sheets.load(\"items/name\");\n            await context.sync();\n            let sheetName = \"InputFiles\";\n            let existingNames = sheets.items.map((s) => s.name);\n            let sheet;\n            if (existingNames.includes(sheetName)) {\n              sheet = sheets.getItem(sheetName);\n            } else {\n              sheet = sheets.add(sheetName);\n              const headers = [\"File_Name\"];\n              const headerRange = sheet.getRangeByIndexes(0, 0, 1, headers.length);\n              headerRange.values = [headers];\n              headerRange.format.fill.color = \"#70d9ff\";\n              headerRange.format.font.bold = true;\n              sheet.position = 0;\n            }\n            const usedRange = sheet.getUsedRange();\n            usedRange.load(\"rowCount\");\n            await context.sync();\n            const nextRow = usedRange.rowCount;\n            const targetCell = sheet.getRangeByIndexes(nextRow, 0, 1, 1);\n            targetCell.values = [[fileContent.name]];\n            sheet.activate();\n            await context.sync();\n          });*/\n          //seperate converted datalog and limit files\n\n          const reader = new FileReader();\n          reader.onload = async function (e) {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: \"array\" });\n            const sheetCount = workbook.SheetNames.length;\n            if (sheetCount > 1) {\n              if (i === file_processed) {\n                file_processed = await uploadSelfConvertedDatalog(file, file_processed);\n                logToConsole(\"Processed file = %d\", file_processed);\n              }\n            } else {\n              logToConsole(\"EY datalog is importing\");\n              if (i === file_processed) {\n                file_processed = await uploadEYdatalog(file, file_processed);\n                logToConsole(\"Processed file = %d\", file_processed);\n              }\n            }\n          };\n          reader.readAsArrayBuffer(file);\n          // แสดงชื่อไฟล์และ path ที่นำเข้า\n          const importedList = document.getElementById(\"importedFilesList\");\n          if (importedList) {\n            const listItem = document.createElement(\"li\");\n            listItem.textContent = `${file.name} - ${file.webkitRelativePath || file.name}`;\n            importedList.appendChild(listItem);\n          }\n        } else if (isSTDF) {\n          console.log(\"File is STDF\");\n          logToConsole(\"File is STDF\");\n          const formData = new FormData();\n          if (!file) {\n            console.warn(\"ไม่มีไฟล์ที่เลือก\");\n            return;\n          }\n          formData.append(\"files\", file);\n          console.log(`กำลังประมวลผลไฟล์: ${file.name}`);\n          logToConsole(`กำลังประมวลผลไฟล์: ${file.name}`);\n          document.body.style.cursor = \"wait\";\n          /*const response = await fetch(\"https://127.0.0.1:8000/upload-stdf/\", {\n            method: \"POST\",\n            body: formData,\n          });*/\n          const response = await fetch(\"https://limit-project-demo.onrender.com/upload-stdf/\", {\n            method: \"POST\",\n            body: formData,\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"STDF upload failed:\", errorText);\n            logToConsole(\"STDF upload failed:\", errorText);\n            return;\n          }\n\n          // รับไฟล์เป็น blob\n          const blob = await response.blob();\n          const downloadUrl = window.URL.createObjectURL(blob);\n\n          // ใช้ชื่อไฟล์ต้นฉบับจาก file.name แล้วเปลี่ยนนามสกุลเป็น .xlsx\n          const originalName = file.name.replace(/\\.[^/.]+$/, \"\"); // ตัดนามสกุลเดิมออก\n          const downloadName = `${originalName}.xlsx`;\n\n          const a = document.createElement(\"a\");\n          a.href = downloadUrl;\n          a.download = downloadName;\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          window.URL.revokeObjectURL(downloadUrl);\n          logToConsole(\"STDF converted and downloaded successfully\");\n\n          //แสดงลิงก์ดาวน์โหลดใน Task Pane\n          /*const container = document.getElementById(\"download-links\");\n          container.innerHTML = \"\"; // ล้างของเก่า\n          result.converted_files.forEach((fileName) => {\n            const link = document.createElement(\"a\");\n            link.href = `https://127.0.0.1:8000/download/${fileName}`; //Needs to change to cloud web as  a file storage\n            link.textContent = `ดาวน์โหลด: ${fileName}`;\n            link.target = \"_blank\";\n            container.appendChild(link);\n            container.appendChild(document.createElement(\"br\"));\n          });*/\n        } else {\n          console.warn(`ไม่รองรับไฟล์ ${file.name}`);\n          logToConsole(`ไม่รองรับไฟล์ ${file.name}`);\n        }\n      } catch (err) {\n        console.error(`Error while processing file: ${file.name}`, err);\n        logToConsole(`Error while processing file: ${file.name}`);\n      } finally {\n        document.body.style.cursor = \"default\";\n      }\n    }\n    document.body.style.cursor = \"default\";\n  } catch (error) {\n    console.error(`Error while importing file: ${file.name}`, error);\n    logToConsole(`Error while importing file: ${file.name}`);\n    fileInput.value = \"\"; // ✅ reset แม้เกิด error\n  }\n}\n\nasync function uploadSelfConvertedDatalog(file, file_processed) {\n  document.body.style.cursor = \"wait\";\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      console.log(`Uploading Excel Datalog to API: ${file.name}`);\n      logToConsole(`Uploading Excel Datalog to API: ${file.name}`);\n      const data = new Uint8Array(e.target.result);\n      const workbook = XLSX.read(data, { type: \"array\" });\n      const mirSheet = workbook.Sheets[\"mir\"];\n      Excel.run(async (context) => {\n        const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n        let usedRange;\n\n        usedRange = masterSheet.getUsedRange();\n        usedRange.load([\"rowCount\", \"columnCount\"]);\n        await context.sync();\n        const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n        const chunkSize = 1000;\n        const totalRows = usedRange.rowCount;\n        const totalCols = usedRange.columnCount;\n        let allValues = [];\n        for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n          const rowCount = Math.min(chunkSize, totalRows - startRow);\n          const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n          range.load(\"values\");\n          await context.sync(); // รวมข้อมูลเข้า allValues\n          allValues = allValues.concat(range.values);\n        }\n        let headers = allValues[0];\n        //let headers = usedRange.values[0];\n        console.log(\"headers: \", headers);\n\n        //Insert JOB_NAM as a Product Name\n        const mirData = XLSX.utils.sheet_to_json(mirSheet, { defval: \"\" });\n        const productName = mirData[0]?.[\"JOB_NAM\"]?.trim();\n        let stagename = mirData[0]?.[\"TEST_COD\"]?.trim();\n        let productColIndex = headers.indexOf(productName);\n        console.log(\"productColINdex before add product name or stage: %d\", productColIndex);\n        logToConsole(\"productColINdex before add product name or stage: %d\", productColIndex);\n        let Allproduct_stage = [];\n        let StartStageCol;\n        let EndStageCol;\n        let allstagescount;\n        for (let i = 0; i <= headers.length; i++) {\n          if (headers[i] === \"Can remove (Y/N)\") {\n            StartStageCol = i;\n          }\n          if (headers[i] === \"Lsl_typ\") {\n            EndStageCol = i;\n          }\n        }\n        allstagescount = EndStageCol - StartStageCol - 1;\n        let temp;\n        if (allstagescount > 0) {\n          for (let i = StartStageCol + 1; i < EndStageCol; i++) {\n            const Procell = headers[i];\n            const stageCell = allValues[1][i];\n            if (Procell && Procell.trim() !== \"\") {\n              Allproduct_stage.push({\n                name: Procell.trim(),\n                stage: stageCell,\n              });\n              temp = Procell.trim();\n            } else {\n              Allproduct_stage.push({\n                name: temp,\n                stage: stageCell,\n              });\n            }\n          }\n        }\n\n        // If there is no same product name then insert it in\n        if (productColIndex === -1) {\n          const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          //check if product name start with  T or P if T then show F,A if P then show W\n          //if()\n          const columnToInsert = sheet.getRange(\"F:F\");\n          columnToInsert.insert(Excel.InsertShiftDirection.right);\n          const product_name_head = sheet.getRange(\"F1:F1\");\n          product_name_head.values = [[productName]];\n          let Canremove_index = headers.indexOf(\"Can remove (Y/N)\");\n          if (Canremove_index < 0) {\n            logToConsole(\"Can't find Can remove col\");\n            return;\n          }\n          let Lsl_typ_index = headers.indexOf(\"Lsl_typ\");\n          if (Lsl_typ_index < 0) {\n            logToConsole(\"Can't find Lsl_typ col\");\n            return;\n          }\n          let Product_count = 0;\n          for (let i = Canremove_index; i < Lsl_typ_index; i++) {\n            let cell = usedRange.getCell(0, i);\n            if (!isNaN(cell) || cell !== \"\") {\n              Product_count++;\n            }\n          }\n          const colors = [\"#C6EFCE\", \"#FFEB9C\", \"#FFC7CE\", \"#D9E1F2\"];\n          const color = colors[Product_count % 4];\n          product_name_head.format.fill.color = color;\n          //add stage\n          const stage_name_head = sheet.getRange(\"F2:F2\");\n          stage_name_head.values = [[stagename]];\n          await context.sync();\n        } else {\n          //if product name is same then check if the stage is same\n          const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          await context.sync();\n          const startCol = productColIndex;\n          const stage_count = Allproduct_stage.filter((item) => item.name === productName).length; //how many stages does this product have\n          console.log(\"stage ของ product %s มีอยู่แล้วจำนวน %d\", productName, stage_count);\n          logToConsole(\"stage ของ product %s มีอยู่แล้วจำนวน %d\", productName, stage_count);\n          let columnToInsert = sheet.getRangeByIndexes(0, startCol + 1, 1, 1);\n          columnToInsert.insert(Excel.InsertShiftDirection.right);\n          usedRange = sheet.getUsedRange();\n          usedRange.load(\"rowCount\");\n          await context.sync();\n          const stagerow = usedRange.rowCount;\n          let stage_name_head = sheet.getRangeByIndexes(1, startCol + stage_count, stagerow, 1);\n          stage_name_head.insert(Excel.InsertShiftDirection.right);\n          usedRange = sheet.getUsedRange();\n          //usedRange.load(\"values\");\n          await context.sync();\n          const stageCell = sheet.getCell(1, startCol + stage_count);\n          stageCell.values = [[stagename]];\n          console.log(\"startcol for merge: %d stagecount for merge: %d\", startCol, stage_count);\n          logToConsole(\"startcol for merge: %d stagecount for merge: %d\", startCol, stage_count);\n          const range = sheet.getRangeByIndexes(0, startCol, 1, stage_count);\n          range.values = Array(1).fill(Array(stage_count).fill(productName)); // ใส่ค่า productName ลงในทุกเซลล์ของ range Array(stage_count).fill(productName) สร้างอาร์เรย์ย่อยที่มี productName ซ้ำกัน stage_count ครั้ง เช่น [\"ABC\", \"ABC\", \"ABC\"] Array(1).fill(...) ทำให้กลายเป็น array 2 มิติ (1 แถว n คอลัมน์) → ซึ่งตรงกับ .values ที่ต้องการ\n          range.merge();\n          await context.sync();\n        }\n        //Download new Usedrange after insert new cells\n        usedRange = masterSheet.getUsedRange();\n        //usedRange.load(\"values\");\n        await context.sync();\n        masterSheet.activate();\n        console.log(\"Completely added product name and stage\");\n        logToConsole(\"Completely added product name and stage\");\n        return (\n          /*fetch(\"https://127.0.0.1:8000/process-self-converted-datalog/\", {\n            method: \"POST\",\n            body: formData,\n          })*/\n          fetch(\"https://limit-project-demo.onrender.com/process-self-converted-datalog/\", {\n            method: \"POST\",\n            body: formData,\n          })\n            //https://limit-project-demo.onrender.com\n            .then((res) => res.json())\n            .then((data) => {\n              let TestData = data.test_data;\n              if (TestData !== null) {\n                logToConsole(\"process-datalog-excel fetched successfully\");\n              }\n              Excel.run(async (context) => {\n                const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n                let usedRange = sheet.getUsedRange();\n                usedRange.load([\"rowCount\", \"columnCount\"]);\n                await context.sync();\n\n                let chunkSize = 1000;\n                let totalRows = usedRange.rowCount;\n                let totalCols = usedRange.columnCount;\n                let allValues = [];\n                for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n                  const rowCount = Math.min(chunkSize, totalRows - startRow);\n                  const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n                  range.load(\"values\");\n                  await context.sync(); // รวมข้อมูลเข้า allValues\n\n                  allValues = allValues.concat(range.values);\n                }\n                let headers = allValues[0];\n\n                let TestnumColIndex = headers.indexOf(\"Test number\");\n                const SuiteColIndex = headers.indexOf(\"Suite name\");\n                const TestColIndex = headers.indexOf(\"Test name\");\n                if (TestnumColIndex === -1) {\n                  console.error(\"ไม่พบคอลัมน์ Test number\");\n                  logToConsole(\"ไม่พบคอลัมน์ Test number\");\n                  return;\n                }\n                if (SuiteColIndex === -1) {\n                  console.error(\"ไม่พบคอลัมน์ Suite name\");\n                  logToConsole(\"ไม่พบคอลัมน์ Suite name\");\n                  return;\n                }\n                if (TestColIndex === -1) {\n                  console.error(\"ไม่พบคอลัมน์ Test name\");\n                  logToConsole(\"ไม่พบคอลัมน์ Test name\");\n                  return;\n                }\n\n                const testNameRange = sheet.getRangeByIndexes(\n                  2,\n                  TestColIndex,\n                  allValues.length - 2,\n                  1\n                );\n                testNameRange.load(\"values\");\n                await context.sync();\n                logToConsole(\"Determined Allcolindex and testNamerange\");\n                let existingTestNames = [];\n                try {\n                  existingTestNames = testNameRange.values.flat().filter((v) => v !== \"\");\n                } catch (err) {\n                  console.error(\"เกิดปัญหาขณะอ่าน testNameRange.values:\", err);\n                  logToConsole(\"เกิดปัญหาขณะอ่าน testNameRange.values: %s\", err.message || err);\n                  return;\n                }\n                if (!Array.isArray(TestData)) {\n                  console.error(\"TestData ไม่ใช่ array หรือยังไม่ได้โหลด\");\n                  logToConsole(\"TestData ไม่ใช่ array หรือยังไม่ได้โหลด\");\n                  return;\n                }\n                let newTests = [];\n                try {\n                  newTests = TestData.filter((item) => !existingTestNames.includes(item.test_name));\n                } catch (err) {\n                  console.error(\"เกิดปัญหาขณะ TestData.filter\", err);\n                  logToConsole(\"เกิดปัญหาขณะ TestData.filter: %s\", err.message || err);\n                  return;\n                }\n                if (!Array.isArray(allValues)) {\n                  console.error(\"allValues ไม่ใช่ array\");\n                  logToConsole(\"allValues ไม่ใช่ array\");\n                  return;\n                }\n                let startRow = allValues.length;\n                let suiteRange, testRange;\n                let suiteValues = [];\n                let testValues = [];\n                try {\n                  if (newTests.length > 0) {\n                    const testNumbers = newTests.map((t) => [t?.test_number ?? \"\"]);\n                    logToConsole(\"newTests.length = %d\", newTests.length);\n                    // เขียน test numbers\n                    if (TestnumColIndex === -1) {\n                      logToConsole(\"ไม่พบคอลัมน์ Test number ใน headers\");\n                      return;\n                    }\n                    const writeRange = sheet.getRangeByIndexes(\n                      startRow,\n                      TestnumColIndex,\n                      newTests.length,\n                      1\n                    );\n                    writeRange.values = testNumbers;\n                    await context.sync();\n                    // เขียน suite name และ test name\n                    suiteRange = sheet.getRangeByIndexes(\n                      startRow,\n                      SuiteColIndex,\n                      newTests.length,\n                      1\n                    );\n                    testRange = sheet.getRangeByIndexes(startRow, TestColIndex, newTests.length, 1);\n                    suiteValues = newTests.map((t) => [t.suite_name]);\n                    testValues = newTests.map((t) => [t.test_name]);\n                    suiteRange.values = suiteValues;\n                    testRange.values = testValues;\n                    await context.sync();\n                  } else {\n                    logToConsole(\"There's no new tests\");\n                  }\n                } catch (err) {\n                  console.error(\"เกิดปัญหาในช่วงสร้าง newTests:\", err);\n                  logToConsole(\"เกิดปัญหาในช่วงสร้าง newTests: %s\", err.message || err);\n                }\n                // อ่านไฟล์ Excel ที่อัปโหลดเพื่อดึงชื่อ product\n                const data = new Uint8Array(e.target.result);\n                const workbook = XLSX.read(data, { type: \"array\" });\n                const mirSheet = workbook.Sheets[\"mir\"];\n                const mirData = XLSX.utils.sheet_to_json(mirSheet, { defval: \"\" });\n                const productName = mirData[0]?.[\"JOB_NAM\"]?.trim();\n                let productColIndex = headers.indexOf(productName);\n                if (productColIndex === -1) {\n                  console.error(\"ไม่พบชื่อ product ใน header:\", productName);\n                  logToConsole(\"ไม่พบชื่อ product ใน header:\", productName);\n                  return;\n                }\n                Allproduct_stage.push({\n                  name: productName,\n                  stage: stagename,\n                });\n                let stage_count = Allproduct_stage.filter(\n                  (item) => item.name === productName\n                ).length;\n                let stage_array_index;\n                let stage_range = sheet.getRangeByIndexes(1, productColIndex, 1, stage_count);\n                stage_range.load(\"values\");\n                await context.sync();\n                for (let i = 0; i <= stage_count; i++) {\n                  console.log(\"stage %d = %s\", i, stage_range.values[0][i]);\n                  if (stage_range.values[0][i] === stagename) {\n                    stage_array_index = i;\n                    break;\n                  }\n                }\n\n                if (stage_array_index === undefined) {\n                  console.error(\"ไม่พบ stage name ใน column:\", stagename);\n                  logToConsole(\"ไม่พบ stage name ใน column:\", stagename);\n                }\n                console.log(\n                  \"productColIndex: %d, stage_count: %d, stageArrayIndex: %d \",\n                  productColIndex,\n                  stage_count,\n                  stage_array_index\n                );\n                logToConsole(\n                  \"productColIndex: %d, stage_count: %d, stageArrayIndex: %d \",\n                  productColIndex,\n                  stage_count,\n                  stage_array_index\n                );\n\n                usedRange = sheet.getUsedRange();\n                await context.sync();\n                /*usedRange.load(\"values\");\n              await context.sync();*/\n                usedRange.load([\"rowCount\", \"columnCount\"]);\n                await context.sync();\n                totalRows = usedRange.rowCount;\n                totalCols = usedRange.columnCount;\n                allValues = [];\n                for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n                  const rowCount = Math.min(chunkSize, totalRows - startRow);\n                  const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n                  range.load(\"values\");\n                  await context.sync(); // รวมข้อมูลเข้า allValues\n\n                  allValues = allValues.concat(range.values);\n                }\n                headers = allValues[0];\n\n                // ดึง test name ทั้งหมดใน Excel\n                const testNameRangeAll = sheet.getRangeByIndexes(\n                  2,\n                  TestColIndex,\n                  allValues.length - 2,\n                  1\n                );\n                testNameRangeAll.load(\"values\");\n                await context.sync();\n                // สร้าง YNValues โดยแมปจาก test_name -> YN_check\n                const allTestNames = testNameRangeAll.values.map((row) => row[0]);\n                logToConsole(\"allTestNames length : %d\", allTestNames.length);\n                let YNValues = [];\n                try {\n                  YNValues = allTestNames.map((testName) => {\n                    const match = TestData.find((item) => item.test_name === testName);\n                    return [match ? match.YN_check : \"\"];\n                  });\n                } catch (err) {\n                  console.error(\"เกิดปัญหาในช่วงสร้าง YNValues:\", err);\n                  logToConsole(\"เกิดปัญหาในช่วงสร้าง YNValues: %s\", err.message || err);\n                }\n                logToConsole(\"YNcolIndex : %d\", productColIndex + stage_array_index);\n                let YNRange = sheet.getRangeByIndexes(\n                  2,\n                  productColIndex + stage_array_index,\n                  YNValues.length,\n                  1\n                );\n                YNRange.load(\"values\");\n                await context.sync();\n\n                if (YNValues.length === 0) {\n                  console.warn(\"ไม่มีข้อมูล Y/N check ที่จะเขียน\");\n                  logToConsole(\"ไม่มีข้อมูล Y/N check ที่จะเขียน\");\n                } else {\n                  console.log(\"YN.length of %s %s is %d\", productName, stagename, YNValues.length);\n                  logToConsole(\"YN.length of %s %s is %d\", productName, stagename, YNValues.length);\n                }\n                YNRange.values = YNValues;\n                await context.sync();\n                // loop for add green color and add N for null cell (not yet)\n                const IsUsedIndex = headers.indexOf(\"Is used (Y/N)\");\n                let IsUsedDataRange = sheet.getRangeByIndexes(\n                  2,\n                  IsUsedIndex,\n                  YNRange.values.length,\n                  1\n                );\n                IsUsedDataRange.load(\"values\");\n                await context.sync();\n                let IsUsedData = IsUsedDataRange.values;\n\n                // ถ้า IsUsedData ยังไม่มีข้อมูล ให้สร้าง array เปล่าขึ้นมา ไม่งั้นถ้ามันเป็นข้อมูล undefine มันจะ error\n                if (!Array.isArray(IsUsedData) || IsUsedData.length === 0) {\n                  IsUsedData = Array.from({ length: YNRange.values.length }, () => [\"\"]);\n                }\n\n                for (let i = 0; i < YNRange.values.length; i++) {\n                  if (YNRange.values[i][0] === \"Y\") {\n                    if (IsUsedData[i][0] === \"Partial\" || IsUsedData[i][0] === \"No\") {\n                      IsUsedData[i][0] = \"Partial\";\n                    }\n                    if (IsUsedData[i][0] === \"No\") {\n                      IsUsedData[i][0] = \"Partial\";\n                    } else IsUsedData[i][0] = \"All\";\n                  } else {\n                    if (IsUsedData[i][0] === \"All\" || IsUsedData[i][0] === \"Partial\") {\n                      IsUsedData[i][0] = \"Partial\";\n                    } else IsUsedData[i][0] = \"No\";\n                  }\n                }\n                IsUsedDataRange.values = IsUsedData;\n                await context.sync();\n                //conditional formatting color\n                const conditionalFormat = YNRange.conditionalFormats.add(\n                  Excel.ConditionalFormatType.containsText\n                );\n                conditionalFormat.textComparison.format.fill.color = \"#C6EFCE\";\n                conditionalFormat.textComparison.rule = {\n                  operator: Excel.ConditionalTextOperator.contains,\n                  text: \"Y\",\n                };\n                const IsUsedkeywords = [\"All\", \"Partial\"];\n                const colors = [\"#C6EFCE\", \"#FFEB9C\"];\n                for (let i = IsUsedDataRange.conditionalFormats.count - 1; i >= 0; i--) {\n                  IsUsedDataRange.conditionalFormats.getItemAt(i).delete();\n                }\n                await context.sync();\n                for (let i = 0; i < IsUsedkeywords.length; i++) {\n                  const word = IsUsedkeywords[i];\n                  const color = colors[i];\n              \n                  const conditionalFormat = IsUsedDataRange.conditionalFormats.add(\n                    Excel.ConditionalFormatType.containsText\n                  );\n                  conditionalFormat.textComparison.format.fill.color = color;\n                  conditionalFormat.textComparison.rule = {\n                    operator: Excel.ConditionalTextOperator.contains,\n                    text: word,\n                  };\n                }\n\n\n                await context.sync();\n\n                console.log(\"Finished processing one file\");\n                logToConsole(\"Finished processing one file\");\n                file_processed++;\n                resolve(file_processed);\n                document.body.style.cursor = \"default\";\n              });\n            })\n        );\n      });\n    };\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nasync function uploadEYdatalog(file, file_processed) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = async function (e) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      console.log(`Uploading Excel Datalog to API: ${file.name}`);\n      logToConsole(`Uploading Excel Datalog to API: ${file.name}`);\n      const data = new Uint8Array(e.target.result);\n      /*const response = await fetch(\"https://localhost:8000/process-EY/\", {\n        method: \"POST\",\n        body: formData,\n      });*/\n      const response = await fetch(\"https://limit-project-demo.onrender.com/process-EY/\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      /*{ result will look like this\n          \"data\": [\n          {\n            \"test_number\": 61,\n            \"suite_name\": \"ivn_std_init\",\n            \"test_name\": \"OtpMapCollabNetRev\",\n            \"YN_check\": \"Y\",\n            \"product\": \"BirdRock\",\n            \"stage\": \"FH3\"\n          },*/\n      if (!response.ok) {\n        console.error(\"Upload failed\");\n        logToConsole(\"Upload failed\");\n        return;\n      }\n      const result = await response.json();\n      const EYdata = result.data;\n      //seperate difference stage data\n      let All_EY_Stage_Product = [];\n      let tempStage;\n      let tempProductname;\n      let Allproduct = [];\n      for (const item of EYdata) {\n        if (tempProductname !== item.product) {\n          tempProductname = item.product;\n          tempStage = item.stage;\n          All_EY_Stage_Product.push({\n            name: item.product,\n            stage: item.stage,\n          });\n          Allproduct.push(tempProductname);\n        } else if (item.stage !== tempStage) {\n          tempStage = item.stage;\n          All_EY_Stage_Product.push({\n            name: item.product,\n            stage: item.stage,\n          });\n        }\n      }\n      console.log(\"All product: \", Allproduct);\n      console.log(\"All EY stage and product: \", All_EY_Stage_Product);\n      //loop for all product\n      for (let tempProductname of Allproduct) {\n        let OneProduct_Allstage = All_EY_Stage_Product.filter(\n          (item) => item.name === tempProductname\n        );\n\n        console.log(\"OneProduct_Allstage: \", OneProduct_Allstage);\n        //loop for each stage of one product\n        for (let item of OneProduct_Allstage) {\n          let productName = item.name;\n          let stageName = item.stage.toLowerCase();\n          await Check_product_stage(productName, stageName);\n          let OneStage_data = EYdata.filter(\n            (content) => productName === content.product && item.stage === content.stage\n          );\n          console.log(\"OneStage_data: \", OneStage_data);\n          await WriteNewtest(OneStage_data);\n          await YN(OneStage_data, productName, stageName);\n        }\n      }\n\n      logToConsole(\"Import EY file successfully\");\n      file_processed++;\n      resolve(file_processed);\n    };\n\n    reader.onerror = reject;\n    reader.readAsArrayBuffer(file);\n  });\n}\n\nasync function importFolder(formData) {\n  let arranged_stages = [];\n  let Allpair = [];\n  let Allfirst = [];\n  let Alllast = [];\n  let limit_compare = [];\n  await Excel.run(async (context) => {\n    document.body.style.cursor = \"wait\";\n    // 1. อัปโหลดไฟล์ทั้งหมดไปยัง Web API\n    /*const response = await fetch(\"https://localhost:8000/upload-folder/\", {\n      method: \"POST\",\n      body: formData,\n    });*/\n    const response = await fetch(\"https://limit-project-demo.onrender.com/upload-folder/\", {\n      method: \"POST\",\n      body: formData,\n    });\n    if (!response.ok) {\n      console.error(\"Upload failed\");\n      logToConsole(\"Upload failed\");\n      return;\n    }\n    logToConsole(\"Import Folder fetched successfully\");\n    const result = await response.json();\n    const mfhFiles = result.mfh_files || [];\n    // 2. แสดงรายชื่อ .mfh ใน UI\n    const mfhList = document.getElementById(\"mfh-list\");\n    mfhList.innerHTML = \"\";\n    const sheets = context.workbook.worksheets;\n    sheets.load(\"items/name\");\n    await context.sync();\n    // 3. ตรวจสอบและสร้าง InputFiles sheet ถ้ายังไม่มี\n    let sheetName = \"InputFiles\";\n    let existingNames = sheets.items.map((s) => s.name);\n    let inputSheet;\n    if (existingNames.includes(sheetName)) {\n      inputSheet = sheets.getItem(sheetName);\n    } else {\n      inputSheet = sheets.add(sheetName);\n      const headers = [\"File_Name\"];\n      const headerRange = inputSheet.getRangeByIndexes(0, 0, 1, headers.length);\n      headerRange.values = [headers];\n      headerRange.format.fill.color = \"#70d9ff\";\n      headerRange.format.font.bold = true;\n      inputSheet.position = 0;\n      await context.sync();\n    }\n\n    // 4. ตรวจสอบและสร้าง Masterfile sheet ถ้ายังไม่มี\n    sheetName = \"Masterfile\";\n    let masterSheet;\n    existingNames = sheets.items.map((s) => s.name);\n    if (!existingNames.includes(sheetName)) {\n      console.log(\"There is no Masterfile yet...Creating Masterfile\");\n      logToConsole(\"There is no Masterfile yet...Creating Masterfile\");\n      const sheets = context.workbook.worksheets;\n      sheets.load(\"items/name\");\n      await context.sync(); //wait to finish loading first\n      const baseName = \"Masterfile\";\n      let sheetName = baseName;\n      const existingNames = sheets.items.map((s) => s.name);\n      // ให้มีมาสเตอร์ไฟล์ ไฟล์เดียว\n      if (existingNames.includes(sheetName)) {\n        //I'll be back!!!!\n      } else {\n        masterSheet = sheets.add(sheetName);\n        masterSheet.position = 0;\n      }\n      masterSheet.activate();\n    }\n\n    mfhFiles.forEach((fileName) => {\n      const li = document.createElement(\"li\");\n      li.textContent = `${fileName} (ready)`;\n      li.style.cursor = \"pointer\";\n      li.addEventListener(\"click\", async () => {\n        // ลบ class 'selected-file' ออกจากรายการอื่น ๆ ก่อน\n        document.querySelectorAll(\"li\").forEach((item) => {\n          item.classList.remove(\"selected-file\");\n        });\n\n        // เพิ่ม class ให้กับรายการที่ถูกคลิก\n        li.classList.add(\"selected-file\");\n\n        /*const res = await fetch(\n          `https://localhost:8000/process-testtable/?filename=${encodeURIComponent(fileName)}`\n        );*/\n        const res = await fetch(\n          `https://limit-project-demo.onrender.com/process-testtable/?filename=${encodeURIComponent(\n            fileName\n          )}`\n        );\n        //https://limit-project-demo.onrender.com\n        if (!res.ok) {\n          const container = document.getElementById(\"download-links\");\n          container.innerHTML = `<p style=\"color:red;\">Failed to process ${fileName}</p>`;\n          return;\n        }\n\n        li.textContent = fileName;\n        const data = await res.json();\n        displayResults(data.files);\n        await Excel.run(async (context) => {\n          document.body.style.cursor = \"wait\";\n          const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          let all_limit_stage = [];\n          for (let file_index = 0; file_index < data.files.length; file_index++) {\n            const usedRange = masterSheet.getUsedRange();\n            usedRange.load([\"values\", \"rowCount\", \"columnCount\"]);\n            await context.sync();\n            let headers = usedRange.values[0] || [];\n            let stages = usedRange.values[1] || [];\n            await context.sync();\n            let file = data.files[file_index];\n            if (file.status === \"ok\" && Array.isArray(file.content)) {\n              const fileHeaders = file.content[0];\n              const stageHeaders = file.content[1];\n              //write col from first uploaded file\n              if (file_index === 0) {\n                for (let col = 0; col < fileHeaders.length; col++) {\n                  const fileheader = fileHeaders[col];\n                  const stageheader = stageHeaders[col];\n                  all_limit_stage.push({\n                    name: fileheader,\n                    stage: stageheader,\n                  });\n                  if (fileheader && fileheader !== (headers[col] || \"\")) {\n                    masterSheet.getCell(0, col).values = [[fileheader]];\n                    await context.sync();\n                  }\n                  if (stageheader && stageheader !== stages[col]) {\n                    masterSheet.getCell(1, col).values = [[stageheader]];\n                    await context.sync();\n                  }\n                }\n                /*usedRange.load([\"values\", \"rowCount\", \"columnCount\"]);\n                await context.sync();\n                headers = usedRange.values[0];\n                stages = usedRange.values[1];*/\n                usedRange.load([\"rowCount\", \"columnCount\"]);\n                await context.sync();\n                const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n                const chunkSize = 1000;\n                const totalRows = usedRange.rowCount;\n                const totalCols = usedRange.columnCount;\n                let allValues = [];\n                for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n                  const rowCount = Math.min(chunkSize, totalRows - startRow);\n                  const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n                  range.load(\"values\");\n                  await context.sync(); // รวมข้อมูลเข้า allValues\n                  allValues = allValues.concat(range.values);\n                }\n                headers = allValues[0];\n                stages = allValues[1];\n              } else {\n                usedRange.load([\"rowCount\", \"columnCount\"]);\n                await context.sync();\n                let UnitsIndex = headers.indexOf(\"Units\");\n                if (UnitsIndex === NaN) {\n                  return;\n                }\n                //find new_stage\n                for (let col = 0; col < headers.length; col++) {\n                  const fileheader = fileHeaders[col];\n                  const stageheader = stageHeaders[col];\n                  let samestage;\n                  if (fileheader === \"Lsl\" || fileheader === \"Usl\") {\n                    samestage = all_limit_stage.find((item) => item.stage === stageheader);\n                    if (samestage === undefined || samestage === \"\") {\n                      logToConsole(\"new stage is %s\", stageheader);\n                      all_limit_stage.push({\n                        name: fileheader,\n                        stage: stageheader,\n                      });\n                      let newstageColRange = masterSheet.getRangeByIndexes(\n                        0,\n                        UnitsIndex + 3, //after spec col\n                        usedRange.rowCount,\n                        2\n                      );\n                      newstageColRange.insert(Excel.InsertShiftDirection.right);\n                      logToConsole(\"Insert new col\");\n                      await context.sync();\n                      usedRange.load([\"rowCount\", \"columnCount\"]);\n                      await context.sync();\n                      masterSheet.getCell(0, UnitsIndex + 3).values = [[\"Lsl\"]];\n                      masterSheet.getCell(0, UnitsIndex + 4).values = [[\"Usl\"]];\n                      masterSheet.getCell(1, UnitsIndex + 3).values = stageheader;\n                      masterSheet.getCell(1, UnitsIndex + 4).values = stageheader;\n                      await context.sync();\n                    }\n                  }\n                }\n              }\n              await context.sync();\n            }\n          }\n          await context.sync();\n          let usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          let sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          let chunkSize = 1000;\n          let totalRows = usedRange.rowCount;\n          let totalCols = usedRange.columnCount;\n          let allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          let headers = allValues[0];\n          let stages = allValues[1];\n          let nextRow = usedRange.rowCount;\n          await context.sync();\n          //arrange stages\n          let wafer_stage = [];\n          let final_stage = [];\n          let a_stage = [];\n          let wh = [];\n          let wr = [];\n          let wc = [];\n          let wi = [];\n          let ww = [];\n          let fh = [];\n          let fr = [];\n          let fc = [];\n          let fi = [];\n          let fw = [];\n          usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n\n          chunkSize = 1000;\n          totalRows = usedRange.rowCount;\n          totalCols = usedRange.columnCount;\n          allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          headers = allValues[0];\n          stages = allValues[1];\n          await context.sync();\n          console.log(stages);\n          wafer_stage = stages.filter((item) => item[0] === \"w\");\n          final_stage = stages.filter((item) => item[0] === \"f\");\n          a_stage = stages.filter((item) => item[0] === \"a\");\n          console.log(wafer_stage);\n          console.log(final_stage);\n          console.log(a_stage);\n          wh = wafer_stage\n            .filter((item) => item[1] === \"h\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"wh\", \"\")) - parseInt(b[0].replace(\"wh\", \"\"));\n            });\n\n          wr = wafer_stage\n            .filter((item) => item[1] === \"r\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"wr\", \"\")) - parseInt(b[0].replace(\"wr\", \"\"));\n            });\n\n          wc = wafer_stage\n            .filter((item) => item[1] === \"c\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"wc\", \"\")) - parseInt(b[0].replace(\"wc\", \"\"));\n            });\n\n          wi = wafer_stage\n            .filter((item) => item[1] === \"i\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"wi\", \"\")) - parseInt(b[0].replace(\"wi\", \"\"));\n            });\n\n          ww = wafer_stage\n            .filter((item) => item[1] === \"w\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"ww\", \"\")) - parseInt(b[0].replace(\"ww\", \"\"));\n            });\n          console.log(wh);\n          console.log(wr);\n          console.log(wc);\n          console.log(ww);\n          console.log(wi);\n          wafer_stage = [];\n          if (wh.length !== 0) {\n            wafer_stage.push(...wh);\n          }\n          if (wr.length !== 0) {\n            wafer_stage.push(...wr);\n          }\n          if (wc.length !== 0) {\n            wafer_stage.push(...wc);\n          }\n          if (ww.length !== 0) {\n            wafer_stage.push(...ww);\n          }\n          if (wi.length !== 0) {\n            wafer_stage.push(...wi);\n          }\n          arranged_stages.push(...wafer_stage);\n\n          fh = final_stage\n            .filter((item) => item[1] === \"h\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"fh\", \"\")) - parseInt(b[0].replace(\"fh\", \"\"));\n            });\n\n          fr = final_stage\n            .filter((item) => item[1] === \"r\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"fr\", \"\")) - parseInt(b[0].replace(\"fr\", \"\"));\n            });\n\n          fc = final_stage\n            .filter((item) => item[1] === \"c\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"fc\", \"\")) - parseInt(b[0].replace(\"fc\", \"\"));\n            });\n\n          fi = final_stage\n            .filter((item) => item[1] === \"i\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"fi\", \"\")) - parseInt(b[0].replace(\"fi\", \"\"));\n            });\n\n          fw = final_stage\n            .filter((item) => item[1] === \"w\")\n            .sort((a, b) => {\n              return parseInt(a[0].replace(\"fw\", \"\")) - parseInt(b[0].replace(\"fw\", \"\"));\n            });\n          console.log(fh);\n          console.log(fr);\n          console.log(fc);\n          console.log(fw);\n          console.log(fi);\n          final_stage = [];\n          if (fh.length !== 0) {\n            final_stage.push(...fh);\n          }\n          if (fr.length !== 0) {\n            final_stage.push(...fr);\n          }\n          if (fc.length !== 0) {\n            final_stage.push(...fc);\n          }\n          if (fw.length !== 0) {\n            final_stage.push(...fw);\n          }\n          if (fi.length !== 0) {\n            final_stage.push(...fi);\n          }\n          arranged_stages.push(...final_stage);\n          arranged_stages.push(...a_stage); // needs to fix this if there are more 'a' test\n\n          //send stages data to checkbox\n          const uniqueWh = wh.filter((_, index) => index % 2 === 0);\n          const uniqueWr = wr.filter((_, index) => index % 2 === 0);\n          const uniqueWc = wc.filter((_, index) => index % 2 === 0);\n          const uniqueWi = wi.filter((_, index) => index % 2 === 0);\n          const uniqueWw = ww.filter((_, index) => index % 2 === 0);\n          const uniqueFh = fh.filter((_, index) => index % 2 === 0);\n          const uniqueFr = fr.filter((_, index) => index % 2 === 0);\n          const uniqueFc = fc.filter((_, index) => index % 2 === 0);\n          const uniqueFi = fi.filter((_, index) => index % 2 === 0);\n          const uniqueFw = fw.filter((_, index) => index % 2 === 0);\n          const uniqueAr = a_stage.filter((_, index) => index % 2 === 0);\n          let pairList = [];\n          uniqueWh.forEach((w) => {\n            uniqueFh.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueWr.forEach((w) => {\n            uniqueFr.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueWc.forEach((w) => {\n            uniqueFc.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueWi.forEach((w) => {\n            uniqueFi.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueWw.forEach((w) => {\n            uniqueFw.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueFr.forEach((w) => {\n            uniqueAr.forEach((f) => {\n              const pairId = `${w}__${f}`; // ใช้ __ เพื่อแยกชื่อ stage\n              const label = `${w} ? ${f}`;\n              pairList.push({ id: pairId, label });\n            });\n          });\n          uniqueWh.forEach((a, i) => {\n            uniqueWh.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueWr.forEach((a, i) => {\n            uniqueWr.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueWc.forEach((a, i) => {\n            uniqueWc.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueWi.forEach((a, i) => {\n            uniqueWi.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueWw.forEach((a, i) => {\n            uniqueWw.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueFh.forEach((a, i) => {\n            uniqueFh.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueFr.forEach((a, i) => {\n            uniqueFr.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueFc.forEach((a, i) => {\n            uniqueFc.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueFi.forEach((a, i) => {\n            uniqueFi.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n          uniqueFw.forEach((a, i) => {\n            uniqueFw.forEach((b, j) => {\n              if (i < j) {\n                // ป้องกันการจับคู่ซ้ำและตัวเอง\n                const pairId = `${a}__${b}`;\n                const label = `${a} ? ${b}`;\n                pairList.push({ id: pairId, label });\n              }\n            });\n          });\n\n          console.log(pairList);\n          // สร้าง checkbox จาก pairList\n\n          pairList.forEach((pair) => {\n            const labelWrapper = document.createElement(\"label\");\n            labelWrapper.className = \"label-item\"; // สำคัญมาก\n\n            const checkbox = document.createElement(\"input\");\n            checkbox.type = \"checkbox\";\n            checkbox.id = pair.id;\n            checkbox.name = \"stagePair\";\n            checkbox.value = pair.id;\n\n            labelWrapper.appendChild(checkbox);\n            labelWrapper.appendChild(document.createTextNode(` ${pair.label}`));\n            labelList.appendChild(labelWrapper);\n\n            /*const label = document.createElement(\"label\");\n            label.htmlFor = pair.id;\n            label.textContent = ` ${pair.label}`;\n            checkboxForm.appendChild(checkbox);\n            checkboxForm.appendChild(label);\n            checkboxForm.appendChild(document.createElement(\"br\"));*/\n            //collect each pair in array\n            let first = pair.label.slice(0, 3); //first three letters\n            let last = pair.label.slice(-3); //last three letters\n            /*Allpair.push = first;\n            Allpair.push = last;*/\n            Allfirst.push(...[first]);\n            Alllast.push(...[last]);\n            let pair_header = [\n              //\"LL\",\n              // \"UL\",\n              \"LL \" + first.toUpperCase() + \" ? \" + last.toUpperCase(),\n              \"UL \" + first.toUpperCase() + \" ? \" + last.toUpperCase(),\n            ];\n            Allpair.push(...pair_header);\n          });\n          console.log(\"Allpair: \", Allpair);\n          let SpecIndex = stages.indexOf(\"Spec\");\n          if (isNaN(SpecIndex)) {\n            logToConsole(\"Can't find Spec column!\");\n            return;\n          }\n          logToConsole(\"Spec index is %d\", SpecIndex);\n          let arrange_range = masterSheet.getRangeByIndexes(\n            1,\n            SpecIndex + 2,\n            1,\n            arranged_stages.length\n          );\n          arrange_range.values = [arranged_stages];\n          await context.sync();\n\n          usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          chunkSize = 1000;\n          totalRows = usedRange.rowCount;\n          totalCols = usedRange.columnCount;\n          allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          headers = allValues[0];\n          stages = allValues[1];\n          nextRow = usedRange.rowCount;\n          await context.sync();\n          for (const file of data.files) {\n            if (file.status === \"ok\" && Array.isArray(file.content)) {\n              const fileHeaders = file.content[0];\n              const stageHeaders = file.content[1];\n              for (let i = 2; i < file.content.length; i++) {\n                const row = file.content[i];\n                const rowData = [];\n                for (let col = 0; col < headers.length; col++) {\n                  const header = headers[col];\n                  if (header === \"Lsl\" || header === \"Usl\") {\n                    const stageName = stages[col]; // stage ที่ต้องการใน column นี้\n                    // หาตำแหน่งของ stage ในไฟล์\n                    if (header === \"Lsl\") {\n                      const file_stageIndex = stageHeaders.indexOf(stageName);\n                      if (file_stageIndex === NaN) {\n                        continue;\n                      }\n                      rowData.push(file_stageIndex !== -1 ? row[file_stageIndex] : \"\");\n                    } else {\n                      const file_stageIndex = stageHeaders.indexOf(stageName);\n                      if (file_stageIndex === NaN) {\n                        continue;\n                      }\n                      rowData.push(file_stageIndex !== -1 ? row[file_stageIndex + 1] : \"\");\n                    }\n                  } else {\n                    const MasterheaderIndex = headers.indexOf(header);\n                    const headerIndex = fileHeaders.indexOf(header);\n                    // ตรวจสอบว่า header ทั้งสองฝั่งมีอยู่จริง\n                    if (MasterheaderIndex !== -1 && headerIndex !== -1) {\n                      rowData[MasterheaderIndex] = row[headerIndex];\n                    }\n                  }\n                }\n                const targetRange = masterSheet.getRangeByIndexes(nextRow, 0, 1, headers.length);\n                targetRange.values = [rowData];\n                nextRow++;\n              }\n            }\n          }\n          await context.sync();\n\n          //create columns for limit compare\n          usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          chunkSize = 1000;\n          totalRows = usedRange.rowCount;\n          totalCols = usedRange.columnCount;\n          allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          headers = allValues[0];\n          stages = allValues[1];\n          nextRow = usedRange.rowCount;\n          let Bin_s_index = headers.indexOf(\"Bin_s_num\");\n          await context.sync();\n          masterSheet\n            .getRangeByIndexes(0, Bin_s_index, usedRange.rowCount, 2)\n            .insert(Excel.InsertShiftDirection.right);\n          await context.sync();\n          masterSheet.getCell(0, Bin_s_index).values = [[\"All LL ? Spec\"]];\n          masterSheet.getCell(0, Bin_s_index + 1).values = [[\"All UL ? Spec\"]];\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          //insert new columns for limit compare\n          masterSheet\n            .getRangeByIndexes(0, Bin_s_index + 2, usedRange.rowCount, arranged_stages.length)\n            .insert(Excel.InsertShiftDirection.right);\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          for (let col = SpecIndex + 2; col < SpecIndex + 2 + arranged_stages.length; col += 2) {\n            limit_compare.push(...[\"LL Spec? \" + stages[col], \"UL Spec? \" + stages[col]]);\n          }\n          console.log(limit_compare);\n          console.log(\"limit_compare contains undefined?\", limit_compare.includes(undefined));\n          console.log(\"limit_compare contains null?\", limit_compare.includes(null));\n          masterSheet.getRangeByIndexes(0, Bin_s_index + 2, 1, limit_compare.length).values = [\n            limit_compare,\n          ];\n          await context.sync();\n          document.body.style.cursor = \"default\";\n        });\n\n        await Excel.run(async (context) => {\n          await context.sync();\n          await new Promise((resolve) => setTimeout(resolve, 100));\n          document.body.style.cursor = \"wait\";\n          //limit comparison\n          const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          const usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n\n          let sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          let chunkSize = 1000;\n          let totalRows = usedRange.rowCount;\n          let totalCols = usedRange.columnCount;\n          let allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          let headers = allValues[0];\n          let stages = allValues[1];\n          let values = allValues;\n          let rowCount = usedRange.rowCount;\n          let columnCount = usedRange.columnCount;\n          logToConsole(\"rowCount : %d columnCount : %d\", rowCount, columnCount);\n\n          let LLspecIndex = stages.indexOf(\"Spec\");\n          const All_LL_specIndex = headers.indexOf(\"All LL ? Spec\");\n          const All_UL_specIndex = headers.indexOf(\"All UL ? Spec\");\n          logToConsole(\"LLspecIndex : %d\", LLspecIndex);\n          let ULlastIndex = LLspecIndex + arranged_stages.length + 2;\n          let limit = [];\n          for (let r = 2; r < values.length; r++) {\n            let rowData = [];\n            for (let c = LLspecIndex; c <= ULlastIndex; c++) {\n              rowData.push(values[r][c]); //collect all limits\n            }\n            limit.push(rowData);\n          }\n          let firstLLindex = headers.indexOf(\"All UL ? Spec\") + 1;\n          let All_LL_spec = [];\n          let All_UL_spec = [];\n          let ALL_compare_result = [];\n          logToConsole(\"Limit length : %d\", limit.length);\n          for (let i = 0; i < limit.length; i++) {\n            const row = limit[i];\n            const specLL = row[0];\n            const specUL = row[1];\n            let in_outllResult = \"In-spec\";\n            let in_outulResult = \"In-spec\";\n            ALL_compare_result[i] = [];\n            // เริ่มจาก index 2 เพราะ index 0,1 คือ specLL, specUL\n            for (let j = 2; j + 1 < row.length; j += 2) {\n              const LLvalue = row[j];\n              const ULvalue = row[j + 1];\n\n              // ตรวจสอบว่าค่าทั้งสองมีจริงก่อน\n              if (LLvalue === undefined || ULvalue === undefined) {\n                console.warn(`Missing LSL/USL at row ${i}, columns ${j} and ${j + 1}`);\n                continue;\n              }\n\n              let LLspec_limResult = \"\";\n              let ULspec_limResult = \"\";\n\n              // LL เปรียบเทียบ\n              if (LLvalue !== \"\" && LLvalue != null && !isNaN(LLvalue)) {\n                if (!(LLvalue >= specLL)) {\n                  in_outllResult = \"Out-spec\";\n\n                  LLspec_limResult = \"Tighten\";\n                } else if (specLL < LLvalue) {\n                  LLspec_limResult = \"Widen\";\n                } else {\n                  LLspec_limResult = \"Same\";\n                }\n              }\n\n              // UL เปรียบเทียบ\n              if (ULvalue !== \"\" && ULvalue != null && !isNaN(ULvalue)) {\n                if (!(ULvalue <= specUL)) {\n                  in_outulResult = \"Out-spec\";\n\n                  ULspec_limResult = \"Tighten\";\n                } else if (specUL > ULvalue) {\n                  ULspec_limResult = \"Widen\";\n                } else {\n                  ULspec_limResult = \"Same\";\n                }\n              }\n\n              // Collect data of each row\n\n              ALL_compare_result[i].push(LLspec_limResult);\n              ALL_compare_result[i].push(ULspec_limResult);\n            }\n            All_LL_spec.push([in_outllResult]);\n            All_UL_spec.push([in_outulResult]);\n          }\n\n          // เขียนผลลัพธ์ลง Excel\n          masterSheet.getRangeByIndexes(\n            2,\n            firstLLindex,\n            ALL_compare_result.length,\n            ALL_compare_result[0].length\n          ).values = ALL_compare_result;\n          await context.sync();\n\n          logToConsole(\"All_LL_spec length : %d\", All_LL_spec.length);\n          logToConsole(\"All_UL_spec length : %d\", All_UL_spec.length);\n          let All_LL_specRange = masterSheet.getRangeByIndexes(\n            2,\n            All_LL_specIndex,\n            All_LL_spec.length,\n            1\n          );\n          let All_UL_specRange = masterSheet.getRangeByIndexes(\n            2,\n            All_UL_specIndex,\n            All_UL_spec.length,\n            1\n          );\n          All_LL_specRange.values = All_LL_spec;\n          All_UL_specRange.values = All_UL_spec;\n          await context.sync();\n          //insert \"Is used (Y/N)\", \"Can remove (Y/N)\"\n          const columnToInsert = masterSheet.getRangeByIndexes(0, 3, rowCount, 2);\n          columnToInsert.insert(Excel.InsertShiftDirection.right);\n          masterSheet.getCell(0, 3).values = \"Is used (Y/N)\";\n          masterSheet.getCell(0, 4).values = \"Can remove (Y/N)\";\n          await context.sync();\n          logToConsole(\"Limit Compare Successed\");\n          document.body.style.cursor = \"default\";\n        });\n\n        await Excel.run(async (context) => {\n          document.body.style.cursor = \"wait\";\n          await context.sync();\n          //insert limit vs limit col\n          const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\"); // ✅ ดึงใหม่\n          await context.sync();\n          let usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"rowCount\", \"columnCount\"]);\n          await context.sync();\n          let sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          let chunkSize = 1000;\n          let totalRows = usedRange.rowCount;\n          let totalCols = usedRange.columnCount;\n          let allValues = [];\n          for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n            const rowCount = Math.min(chunkSize, totalRows - startRow);\n            const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n            range.load(\"values\");\n            await context.sync(); // รวมข้อมูลเข้า allValues\n            allValues = allValues.concat(range.values);\n          }\n          let headers = allValues[0];\n          let stages = allValues[1];\n          await context.sync();\n          let Bin_s_index = headers.indexOf(\"Bin_s_num\");\n          logToConsole(\"Bin s index: %d\", Bin_s_index);\n          masterSheet\n            .getRangeByIndexes(0, Bin_s_index, usedRange.rowCount, Allpair.length)\n            .insert(Excel.InsertShiftDirection.right);\n          masterSheet.getRangeByIndexes(0, Bin_s_index, 1, Allpair.length).values = [Allpair];\n          await context.sync();\n          let LLspecIndex = stages.indexOf(\"Spec\");\n          logToConsole(\"LLspecIndex : %d\", LLspecIndex);\n          let ULlastIndex = LLspecIndex + arranged_stages.length + 2;\n          let limit = [];\n          for (let r = 2; r < allValues.length; r++) {\n            let rowData = [];\n            for (let c = LLspecIndex; c <= ULlastIndex; c++) {\n              rowData.push(allValues[r][c]); //collect all limits\n            }\n            limit.push(rowData);\n          }\n\n          //limit vs limit comparison\n\n          let ALL_compare_result = [];\n          for (let i = 0; i < Allfirst.length; i++) {\n            const f = Allfirst[i];\n            const l = Alllast[i]; // ใช้ index เดียวกัน\n            const fIndex = stages.indexOf(f);\n            const lIndex = stages.indexOf(l);\n            if (fIndex < 0 || lIndex < 0) {\n              console.warn(`ไม่พบ stage: ${f} หรือ ${l}`);\n              continue;\n            }\n            for (let r = 0; r < limit.length; r++) {\n              const row = limit[r];\n              const LLfirst = row[fIndex - LLspecIndex];\n              const ULfirst = row[fIndex - LLspecIndex + 1];\n              const LLlast = row[lIndex - LLspecIndex];\n              const ULlast = row[lIndex - LLspecIndex + 1];\n              let LLlim_limResult = \"\";\n              let ULlim_limResult = \"\";\n\n              if (LLfirst !== \"\" && LLfirst != null && !isNaN(LLfirst)) {\n                if (LLlast !== \"\" && LLlast != null && !isNaN(LLlast)) {\n                  if (LLfirst < LLlast) {\n                    LLlim_limResult = \"Widen\";\n                  } else if (LLfirst > LLlast) {\n                    LLlim_limResult = \"Tighten\";\n                  } else {\n                    LLlim_limResult = \"Same\";\n                  }\n                }\n              }\n              if (ULfirst !== \"\" && ULfirst != null && !isNaN(ULfirst)) {\n                if (ULlast !== \"\" && ULlast != null && !isNaN(ULlast)) {\n                  if (ULfirst > ULlast) {\n                    ULlim_limResult = \"Widen\";\n                  } else if (ULfirst < ULlast) {\n                    ULlim_limResult = \"Tighten\";\n                  } else {\n                    ULlim_limResult = \"Same\";\n                  }\n                }\n              }\n              if (!ALL_compare_result[r]) {\n                ALL_compare_result[r] = [];\n              }\n              ALL_compare_result[r].push(LLlim_limResult);\n              ALL_compare_result[r].push(ULlim_limResult);\n            }\n          }\n          console.log(\"All compare:\", ALL_compare_result);\n          //write data\n          let lastSpecLimit_index = headers.indexOf(limit_compare[limit_compare.length - 1]);\n          console.log(lastSpecLimit_index);\n          if (lastSpecLimit_index < 0) {\n            logToConsole(\"Can't find last spec vs limit col\");\n            return;\n          }\n          masterSheet.getRangeByIndexes(\n            2,\n            lastSpecLimit_index + 1,\n            ALL_compare_result.length,\n            ALL_compare_result[0].length\n          ).values = ALL_compare_result;\n          await context.sync();\n          document.body.style.cursor = \"default\";\n        });\n\n        //In/Out-spec fill color\n        /*await Excel.run(async (context) => {\n          document.body.style.cursor = \"wait\";\n          const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n          const usedRange = masterSheet.getUsedRange();\n          usedRange.load([\"values\", \"rowCount\", \"columnCount\"]);\n          await context.sync();\n          const headers = usedRange.values[0];\n          let skyRange;\n          //fill skyblue\n          /*for (let i = 0; i < headers.length; i++) {\n            if (headers[i] === \"Lsl\") {\n              skyRange = masterSheet.getRangeByIndexes(1, i, usedRange.rowCount - 1, 1);\n              skyRange.format.fill.color = \"#d6f0fa\";\n            }\n          }\n          await context.sync();\n          const All_LL_specIndex = headers.indexOf(\"All LL ? Spec\");\n          let All_LL_specRange = masterSheet.getRangeByIndexes(\n            2,\n            All_LL_specIndex,\n            usedRange.rowCount,\n            1\n          );\n          const All_UL_specIndex = headers.indexOf(\"All UL ? Spec\");\n          let All_UL_specRange = masterSheet.getRangeByIndexes(\n            2,\n            All_UL_specIndex,\n            usedRange.rowCount,\n            1\n          );\n          // โหลดค่าทั้งหมดของ LL และ UL\n          for (let i = 0; i < usedRange.rowCount; i++) {\n            All_LL_specRange.getCell(i, 0).load(\"values\");\n            All_UL_specRange.getCell(i, 0).load(\"values\");\n          }\n          await context.sync(); // ✅ sync ทีเดียวหลังโหลดทั้งหมด\n\n          // เปลี่ยนสี LL\n          /*for (let i = 0; i <= usedRange.rowCount; i++) {\n            const cell = All_LL_specRange.getCell(i, 0);\n            cell.load(\"values\");\n            await context.sync();\n            const value = cell.values[0][0];\n            if (value === \"In-spec\") {\n              cell.format.fill.color = \"#C6EFCE\";\n            } else if (value === \"Out-spec\") {\n              cell.format.fill.color = \"#FF9D9D\";\n            }\n          }\n\n          // เปลี่ยนสี UL\n          for (let i = 0; i <= usedRange.rowCount; i++) {\n            const cell = All_UL_specRange.getCell(i, 0);\n            cell.load(\"values\");\n            await context.sync();\n            const value = cell.values[0][0];\n            if (value === \"In-spec\") {\n              cell.format.fill.color = \"#C6EFCE\";\n            } else if (value === \"Out-spec\") {\n              cell.format.fill.color = \"#FF9D9D\";\n            }\n          }\n          logToConsole(\"In/Out spec color filled succesfully\");\n          await context.sync(); // ✅ sync การเปลี่ยนสีทั้งหมด\n          document.body.style.cursor = \"default\";\n        });*/\n        // เขียนชื่อไฟล์ลง InputFiles sheet\n        await Excel.run(async (context) => {\n          document.body.style.cursor = \"wait\";\n          const inputSheet = context.workbook.worksheets.getItem(\"InputFiles\");\n          const usedRange = inputSheet.getUsedRange();\n          usedRange.load(\"rowCount\");\n          await context.sync();\n          const nextRow = usedRange.rowCount;\n          const targetCell = inputSheet.getRangeByIndexes(nextRow, 0, 1, 1);\n          targetCell.values = [[fileName]];\n          await context.sync();\n          logToConsole(\"Successfully limit files imported\");\n          document.body.style.cursor = \"default\";\n        });\n      });\n      mfhList.appendChild(li);\n    });\n    document.body.style.cursor = \"default\";\n  });\n}\n\n// ฟังก์ชันแสดงผลลัพธ์จาก .mfh\nfunction displayResults(files) {\n  document.body.style.cursor = \"wait\";\n  const container = document.getElementById(\"download-links\"); //ดึง element ที่มี id=\"download-links\" มาเก็บไว้ในตัวแปร container เพื่อใช้แสดงผล\n  container.innerHTML = \"\"; //เคลียร์เนื้อหาภายใน container ก่อน เพื่อไม่ให้ผลลัพธ์ซ้อนกัน\n  files.forEach((file) => {\n    //\tวนลูปผ่าน array ของไฟล์ที่ส่งเข้ามา\n    const div = document.createElement(\"div\"); //สร้าง <div> ใหม่สำหรับแสดงผลแต่ละไฟล์\n    //ใส่ HTML ลงใน <div> โดย: แสดงชื่อไฟล์ (file.path) และสถานะ (file.status) ถ้า status === \"ok\" ให้แสดงเนื้อหาบางส่วนของไฟล์ (5 แถวแรก) ใน <pre>\n    div.innerHTML = `\n      <p><b>${file.path}</b> - ${file.status}</p>\n    `;\n    container.appendChild(div); //เพิ่ม <div> ที่สร้างเข้าไปใน container เพื่อแสดงผลใน UI\n  });\n  document.body.style.cursor = \"default\";\n}\n\nfunction logToConsole(format, ...args) {\n  const consoleDiv = document.getElementById(\"consoleOutput\");\n  // แทนที่ %s, %d, %f ทีละตัว\n  let formatted = format;\n  let argIndex = 0;\n  formatted = formatted.replace(/%[sdif]/g, (match) => {\n    const arg = args[argIndex++];\n    switch (match) {\n      case \"%d\":\n      case \"%i\":\n        return parseInt(arg);\n      case \"%f\":\n        return parseFloat(arg).toFixed(2);\n      case \"%s\":\n      default:\n        return String(arg);\n    }\n  });\n  const line = document.createElement(\"div\");\n  line.textContent = `> ${formatted}`;\n  consoleDiv.appendChild(line);\n  consoleDiv.scrollTop = consoleDiv.scrollHeight;\n}\n\nasync function checkboxHide(UncheckedNames, checkedNames) {\n  await Excel.run(async (context) => {\n    document.body.style.cursor = \"wait\";\n    const sheets = context.workbook.worksheets;\n    sheets.load(\"items/name\");\n    await context.sync();\n    let masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n    let usedRange = masterSheet.getUsedRange();\n    await context.sync();\n    usedRange.load([\"rowCount\", \"columnCount\"]);\n    await context.sync();\n    console.log(usedRange.rowCount);\n    const chunkSize = 1000;\n    const totalRows = usedRange.rowCount;\n    const totalCols = usedRange.columnCount;\n    let allValues = [];\n    for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n      const rowCount = Math.min(chunkSize, totalRows - startRow);\n      const range = masterSheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n      range.load(\"values\");\n      await context.sync(); // รวมข้อมูลเข้า allValues\n      allValues = allValues.concat(range.values);\n    }\n    let headers = allValues[0];\n    let LLpair_header;\n    let LLpairIndex;\n\n    for (const pair of UncheckedNames) {\n      let first = pair.slice(0, 3); //first three letters\n      let last = pair.slice(-3); //last three letters\n      LLpair_header = \"LL \" + first.toUpperCase() + \" ? \" + last.toUpperCase();\n      console.log(LLpair_header);\n      LLpairIndex = headers.indexOf(LLpair_header);\n      if (LLpairIndex === -1) {\n        logToConsole(\"can't find an index to hide\");\n        return;\n      }\n      logToConsole(\"Hiding : %s ? %s\", first.toUpperCase(), last.toUpperCase());\n      try {\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex - 2, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = true;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex - 1, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = true;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = true;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex + 1, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = true;\n        await context.sync();\n      } catch (err) {\n        console.log(\"Can't hide col due to: \", err);\n      }\n    }\n    await context.sync();\n    for (const pair of checkedNames) {\n      let first = pair.slice(0, 3); //first three letters\n      let last = pair.slice(-3); //last three letters\n      LLpair_header = \"LL \" + first.toUpperCase() + \" ? \" + last.toUpperCase();\n      LLpairIndex = headers.indexOf(LLpair_header);\n      if (LLpairIndex === -1) {\n        logToConsole(\"can't find an index to hide\");\n        return;\n      }\n      try {\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex - 2, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = false;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex - 1, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = false;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = false;\n        masterSheet\n          .getRangeByIndexes(0, LLpairIndex + 1, usedRange.rowCount, 1)\n          .getEntireColumn().columnHidden = false;\n        await context.sync();\n      } catch (err) {\n        console.log(\"Can't show col due to: \", err);\n      }\n      await context.sync();\n    }\n    document.body.style.cursor = \"default\";\n  });\n}\n\nasync function Check_product_stage(productName, stagename) {\n  console.log(\"productName in Check_product_stage: \", productName);\n  console.log(\"stagename in Check_product_stage: \", stagename);\n  await Excel.run(async (context) => {\n    document.body.style.cursor = \"wait\";\n    const masterSheet = context.workbook.worksheets.getItem(\"Masterfile\");\n    let usedRange;\n\n    usedRange = masterSheet.getUsedRange();\n    usedRange.load([\"rowCount\", \"columnCount\"]);\n    await context.sync();\n    const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n    const chunkSize = 1000;\n    const totalRows = usedRange.rowCount;\n    const totalCols = usedRange.columnCount;\n    let allValues = [];\n    for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n      const rowCount = Math.min(chunkSize, totalRows - startRow);\n      const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n      range.load(\"values\");\n      await context.sync(); // รวมข้อมูลเข้า allValues\n      allValues = allValues.concat(range.values);\n    }\n    let headers = allValues[0];\n    //let headers = usedRange.values[0];\n    console.log(\"headers: \", headers);\n\n    //Insert Product as a Product Name\n    //const EYData = XLSX.utils.sheet_to_json(EYsheet, { defval: \"\" }); //can use later if a file have only one product\n    let productColIndex = headers.indexOf(productName);\n    console.log(\"productColINdex before add product name or stage: %d\", productColIndex);\n    logToConsole(\"productColINdex before add product name or stage: %d\", productColIndex);\n    let Allproduct_stage = [];\n    let StartStageCol;\n    let EndStageCol;\n    let allstagescount;\n    for (let i = 0; i <= headers.length; i++) {\n      if (headers[i] === \"Can remove (Y/N)\") {\n        StartStageCol = i;\n      }\n      if (headers[i] === \"Lsl_typ\") {\n        EndStageCol = i;\n      }\n    }\n    allstagescount = EndStageCol - StartStageCol - 1;\n    let temp;\n    if (allstagescount > 0) {\n      for (let i = StartStageCol + 1; i < EndStageCol; i++) {\n        const Procell = headers[i];\n        const stageCell = allValues[1][i];\n        if (Procell && Procell.trim() !== \"\") {\n          Allproduct_stage.push({\n            name: Procell.trim(),\n            stage: stageCell,\n          });\n          temp = Procell.trim();\n        } else {\n          Allproduct_stage.push({\n            name: temp,\n            stage: stageCell,\n          });\n        }\n      }\n    }\n\n    // If there is no same product name then insert it in\n    if (productColIndex === -1) {\n      const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n      //check if product name start with  T or P if T then show F,A if P then show W\n      //if()\n      const columnToInsert = sheet.getRange(\"F:F\");\n      columnToInsert.insert(Excel.InsertShiftDirection.right);\n      const product_name_head = sheet.getRange(\"F1:F1\");\n      product_name_head.values = [[productName]];\n      let Canremove_index = headers.indexOf(\"Can remove (Y/N)\");\n      if (Canremove_index < 0) {\n        logToConsole(\"Can't find Can remove col\");\n        return;\n      }\n      let Lsl_typ_index = headers.indexOf(\"Lsl_typ\");\n      if (Lsl_typ_index < 0) {\n        logToConsole(\"Can't find Lsl_typ col\");\n        return;\n      }\n      let Product_count = 0;\n      for (let i = Canremove_index; i < Lsl_typ_index; i++) {\n        let cell = usedRange.getCell(0, i);\n        if (!isNaN(cell) || cell !== \"\") {\n          Product_count++;\n        }\n      }\n      const colors = [\"#C6EFCE\", \"#FFEB9C\", \"#FFC7CE\", \"#D9E1F2\"];\n      const color = colors[Product_count % 4];\n      product_name_head.format.fill.color = color;\n      //add stage\n      const stage_name_head = sheet.getRange(\"F2:F2\");\n      stage_name_head.values = [[stagename]];\n      await context.sync();\n    } else {\n      //if product name is same then check if the stage is same\n      const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n      await context.sync();\n      const startCol = productColIndex;\n      const stage_count = Allproduct_stage.filter((item) => item.name === productName).length; //how many stages does this product have\n      console.log(\"stage ของ product %s มีอยู่แล้วจำนวน %d\", productName, stage_count);\n      logToConsole(\"stage ของ product %s มีอยู่แล้วจำนวน %d\", productName, stage_count);\n      let columnToInsert = sheet.getRangeByIndexes(0, startCol + 1, 1, 1);\n      columnToInsert.insert(Excel.InsertShiftDirection.right);\n      usedRange = sheet.getUsedRange();\n      usedRange.load(\"rowCount\");\n      await context.sync();\n      const stagerow = usedRange.rowCount;\n      let stage_name_head = sheet.getRangeByIndexes(1, startCol + stage_count, stagerow, 1);\n      stage_name_head.insert(Excel.InsertShiftDirection.right);\n      usedRange = sheet.getUsedRange();\n      //usedRange.load(\"values\");\n      await context.sync();\n      const stageCell = sheet.getCell(1, startCol + stage_count);\n      stageCell.values = [[stagename]];\n      console.log(\"startcol for merge: %d stagecount for merge: %d\", startCol, stage_count);\n      logToConsole(\"startcol for merge: %d stagecount for merge: %d\", startCol, stage_count);\n      const range = sheet.getRangeByIndexes(0, startCol, 1, stage_count);\n      range.values = Array(1).fill(Array(stage_count).fill(productName)); // ใส่ค่า productName ลงในทุกเซลล์ของ range Array(stage_count).fill(productName) สร้างอาร์เรย์ย่อยที่มี productName ซ้ำกัน stage_count ครั้ง เช่น [\"ABC\", \"ABC\", \"ABC\"] Array(1).fill(...) ทำให้กลายเป็น array 2 มิติ (1 แถว n คอลัมน์) → ซึ่งตรงกับ .values ที่ต้องการ\n      range.merge();\n      await context.sync();\n    }\n    document.body.style.cursor = \"default\";\n  });\n}\n\nasync function WriteNewtest(data) {\n  console.log(\"data from EY oneproduct: \", data);\n  await Excel.run(async (context) => {\n    document.body.style.cursor = \"wait\";\n    const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n    let usedRange = sheet.getUsedRange();\n    usedRange.load([\"rowCount\", \"columnCount\"]);\n    await context.sync();\n\n    let chunkSize = 1000;\n    let totalRows = usedRange.rowCount;\n    let totalCols = usedRange.columnCount;\n    let allValues = [];\n    for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n      const rowCount = Math.min(chunkSize, totalRows - startRow);\n      const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n      range.load(\"values\");\n      await context.sync(); // รวมข้อมูลเข้า allValues\n\n      allValues = allValues.concat(range.values);\n    }\n    let headers = allValues[0];\n    let TestnumColIndex = headers.indexOf(\"Test number\");\n    const SuiteColIndex = headers.indexOf(\"Suite name\");\n    const TestColIndex = headers.indexOf(\"Test name\");\n    if (TestnumColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Test number\");\n      logToConsole(\"ไม่พบคอลัมน์ Test number\");\n      return;\n    }\n    if (SuiteColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Suite name\");\n      logToConsole(\"ไม่พบคอลัมน์ Suite name\");\n      return;\n    }\n    if (TestColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Test name\");\n      logToConsole(\"ไม่พบคอลัมน์ Test name\");\n      return;\n    }\n\n    const testNameRange = sheet.getRangeByIndexes(2, TestColIndex, allValues.length - 2, 1);\n    testNameRange.load(\"values\");\n    await context.sync();\n    logToConsole(\"Determined Allcolindex and testNamerange\");\n    let existingTestNames = [];\n    try {\n      existingTestNames = testNameRange.values.flat().filter((v) => v !== \"\");\n    } catch (err) {\n      console.error(\"เกิดปัญหาขณะอ่าน testNameRange.values:\", err);\n      logToConsole(\"เกิดปัญหาขณะอ่าน testNameRange.values: %s\", err.message || err);\n      return;\n    }\n    if (!Array.isArray(data)) {\n      console.error(\"data ไม่ใช่ array หรือยังไม่ได้โหลด\");\n      logToConsole(\"data ไม่ใช่ array หรือยังไม่ได้โหลด\");\n      return;\n    }\n    let newTests = [];\n    try {\n      newTests = data.filter((item) => !existingTestNames.includes(item.test_name));\n      console.log(\"newTests from EY: \", newTests);\n    } catch (err) {\n      console.error(\"เกิดปัญหาขณะ data.filter\", err);\n      logToConsole(\"เกิดปัญหาขณะ data.filter: %s\", err.message || err);\n      return;\n    }\n    if (!Array.isArray(allValues)) {\n      console.error(\"allValues ไม่ใช่ array\");\n      logToConsole(\"allValues ไม่ใช่ array\");\n      return;\n    }\n    let startRow = allValues.length;\n    let suiteRange, testRange;\n    let suiteValues = [];\n    let testValues = [];\n    if (newTests.length > 0) {\n      const testNumbers = newTests.map((t) => [t?.test_number ?? \"\"]);\n      logToConsole(\"newTests.length = %d\", newTests.length);\n      // เขียน test numbers\n      if (TestnumColIndex === -1) {\n        logToConsole(\"ไม่พบคอลัมน์ Test number ใน headers\");\n        return;\n      }\n      const writeRange = sheet.getRangeByIndexes(startRow, TestnumColIndex, newTests.length, 1);\n      writeRange.values = testNumbers;\n      await context.sync();\n      // เขียน suite name และ test name\n      suiteRange = sheet.getRangeByIndexes(startRow, SuiteColIndex, newTests.length, 1);\n      testRange = sheet.getRangeByIndexes(startRow, TestColIndex, newTests.length, 1);\n      suiteValues = newTests.map((t) => [t.suite_name]);\n      testValues = newTests.map((t) => [t.test_name]);\n      suiteRange.values = suiteValues;\n      testRange.values = testValues;\n      await context.sync();\n    } else {\n      logToConsole(\"There's no new tests\");\n    }\n    document.body.style.cursor = \"default\";\n  });\n}\n\nasync function YN(data, productName, stagename) {\n  await Excel.run(async (context) => {\n    document.body.style.cursor = \"wait\";\n    const sheet = context.workbook.worksheets.getItem(\"Masterfile\");\n    let usedRange = sheet.getUsedRange();\n    usedRange.load([\"rowCount\", \"columnCount\"]);\n    await context.sync();\n\n    let chunkSize = 1000;\n    let totalRows = usedRange.rowCount;\n    let totalCols = usedRange.columnCount;\n    let allValues = [];\n    for (let startRow = 0; startRow < totalRows; startRow += chunkSize) {\n      const rowCount = Math.min(chunkSize, totalRows - startRow);\n      const range = sheet.getRangeByIndexes(startRow, 0, rowCount, totalCols);\n      range.load(\"values\");\n      await context.sync(); // รวมข้อมูลเข้า allValues\n\n      allValues = allValues.concat(range.values);\n    }\n    let headers = allValues[0];\n    let Allproduct_stage = [];\n    let StartStageCol;\n    let EndStageCol;\n    let allstagescount;\n    for (let i = 0; i <= headers.length; i++) {\n      if (headers[i] === \"Can remove (Y/N)\") {\n        StartStageCol = i;\n      }\n      if (headers[i] === \"Lsl_typ\") {\n        EndStageCol = i;\n      }\n    }\n    allstagescount = EndStageCol - StartStageCol - 1;\n    let temp;\n    if (allstagescount > 0) {\n      for (let i = StartStageCol + 1; i < EndStageCol; i++) {\n        const Procell = headers[i];\n        const stageCell = allValues[1][i];\n        if (Procell && Procell.trim() !== \"\") {\n          Allproduct_stage.push({\n            name: Procell.trim(),\n            stage: stageCell,\n          });\n          temp = Procell.trim();\n        } else {\n          Allproduct_stage.push({\n            name: temp,\n            stage: stageCell,\n          });\n        }\n      }\n    }\n    let TestnumColIndex = headers.indexOf(\"Test number\");\n    const SuiteColIndex = headers.indexOf(\"Suite name\");\n    const TestColIndex = headers.indexOf(\"Test name\");\n    if (TestnumColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Test number\");\n      logToConsole(\"ไม่พบคอลัมน์ Test number\");\n      return;\n    }\n    if (SuiteColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Suite name\");\n      logToConsole(\"ไม่พบคอลัมน์ Suite name\");\n      return;\n    }\n    if (TestColIndex === -1) {\n      console.error(\"ไม่พบคอลัมน์ Test name\");\n      logToConsole(\"ไม่พบคอลัมน์ Test name\");\n      return;\n    }\n\n    let productColIndex = headers.indexOf(productName);\n    if (productColIndex === -1) {\n      console.error(\"ไม่พบชื่อ product ใน header:\", productName);\n      logToConsole(\"ไม่พบชื่อ product ใน header:\", productName);\n      return;\n    }\n    let stage_count = Allproduct_stage.filter((item) => item.name === productName).length;\n    let stage_array_index;\n    let stage_range = sheet.getRangeByIndexes(1, productColIndex, 1, stage_count);\n    stage_range.load(\"values\");\n    await context.sync();\n    for (let i = 0; i <= stage_count; i++) {\n      console.log(\"stage %d = %s\", i, stage_range.values[0][i]);\n      if (stage_range.values[0][i] === stagename) {\n        stage_array_index = i;\n        break;\n      }\n    }\n\n    if (stage_array_index === undefined) {\n      console.error(\"ไม่พบ stage name ใน column:\", stagename);\n      logToConsole(\"ไม่พบ stage name ใน column:\", stagename);\n    }\n    console.log(\n      \"productColIndex: %d, stage_count: %d, stageArrayIndex: %d \",\n      productColIndex,\n      stage_count,\n      stage_array_index\n    );\n    logToConsole(\n      \"productColIndex: %d, stage_count: %d, stageArrayIndex: %d \",\n      productColIndex,\n      stage_count,\n      stage_array_index\n    );\n\n    const testNameRangeAll = sheet.getRangeByIndexes(2, TestColIndex, allValues.length - 2, 1);\n    testNameRangeAll.load(\"values\");\n    await context.sync();\n    // สร้าง YNValues โดยแมปจาก test_name -> YN_check\n    const allTestNames = testNameRangeAll.values.map((row) => row[0]);\n    logToConsole(\"allTestNames length : %d\", allTestNames.length);\n    let YNValues = [];\n    try {\n      YNValues = allTestNames.map((testName) => {\n        const match = data.find((item) => item.test_name === testName);\n        return [match ? match.YN_check : \"\"];\n      });\n    } catch (err) {\n      console.error(\"เกิดปัญหาในช่วงสร้าง YNValues:\", err);\n      logToConsole(\"เกิดปัญหาในช่วงสร้าง YNValues: %s\", err.message || err);\n    }\n    logToConsole(\"YNcolIndex : %d\", productColIndex + stage_array_index);\n    let YNRange = sheet.getRangeByIndexes(\n      2,\n      productColIndex + stage_array_index,\n      YNValues.length,\n      1\n    );\n    YNRange.load(\"values\");\n    await context.sync();\n\n    if (YNValues.length === 0) {\n      console.warn(\"ไม่มีข้อมูล Y/N check ที่จะเขียน\");\n      logToConsole(\"ไม่มีข้อมูล Y/N check ที่จะเขียน\");\n    } else {\n      console.log(\"YN.length of %s %s is %d\", productName, stagename, YNValues.length);\n      logToConsole(\"YN.length of %s %s is %d\", productName, stagename, YNValues.length);\n    }\n    YNRange.values = YNValues;\n    await context.sync();\n    // loop for add green color and add N for null cell (not yet)\n    const IsUsedIndex = headers.indexOf(\"Is used (Y/N)\");\n    let IsUsedDataRange = sheet.getRangeByIndexes(2, IsUsedIndex, YNRange.values.length, 1);\n    IsUsedDataRange.load(\"values\");\n    await context.sync();\n    let IsUsedData = IsUsedDataRange.values;\n\n    // ถ้า IsUsedData ยังไม่มีข้อมูล ให้สร้าง array เปล่าขึ้นมา ไม่งั้นถ้ามันเป็นข้อมูล undefine มันจะ error\n    if (!Array.isArray(IsUsedData) || IsUsedData.length === 0) {\n      IsUsedData = Array.from({ length: YNRange.values.length }, () => [\"\"]);\n    }\n\n    for (let i = 0; i < YNRange.values.length; i++) {\n      if (YNRange.values[i][0] === \"Y\") {\n        if (IsUsedData[i][0] === \"Partial\" || IsUsedData[i][0] === \"No\") {\n          IsUsedData[i][0] = \"Partial\";\n        }\n        if (IsUsedData[i][0] === \"No\") {\n          IsUsedData[i][0] = \"Partial\";\n        } else if (IsUsedData[i][0] === \"\") {\n          IsUsedData[i][0] = \"All\";\n        }\n      } else {\n        if (IsUsedData[i][0] === \"All\" || IsUsedData[i][0] === \"Partial\") {\n          IsUsedData[i][0] = \"Partial\";\n        } else IsUsedData[i][0] = \"No\";\n      }\n    }\n    IsUsedDataRange.values = IsUsedData;\n    await context.sync();\n    //conditional formatting color\n    let conditionalFormat = YNRange.conditionalFormats.add(\n      Excel.ConditionalFormatType.containsText\n    );\n    conditionalFormat.textComparison.format.fill.color = \"#C6EFCE\";\n    conditionalFormat.textComparison.rule = {\n      operator: Excel.ConditionalTextOperator.contains,\n      text: \"Y\",\n    };\n    IsUsedDataRange.conditionalFormats.load(\"count\");\n    await context.sync();\n\n    for (let i = IsUsedDataRange.conditionalFormats.count - 1; i >= 0; i--) {\n      IsUsedDataRange.conditionalFormats.getItemAt(i).delete();\n    }\n    await context.sync();\n    const IsUsedkeywords = [\"Partial\", \"All\"];\n    const colors = [\"#FFEB9C\", \"#C6EFCE\"];\n\n    for (let i = 0; i < IsUsedkeywords.length; i++) {\n      const word = IsUsedkeywords[i];\n      const color = colors[i];\n\n      const conditionalFormat = IsUsedDataRange.conditionalFormats.add(\n        Excel.ConditionalFormatType.containsText\n      );\n      conditionalFormat.textComparison.format.fill.color = color;\n      conditionalFormat.textComparison.rule = {\n        operator: Excel.ConditionalTextOperator.contains,\n        text: word,\n      };\n    }\n    \n    await context.sync();\n    document.body.style.cursor = \"default\";\n  });\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/NXP-white-logo.iix\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Contoso Task Pane Add-in</title> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"100\\\" height=\\\"50\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome to Limit Tool</h1> <h2 class=\\\"ms-font-xl\\\">by Ornyada Charunyanont</h2> <h3 class=\\\"fast-api\\\">Please open <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://limit-project-demo.onrender.com/docs\\\">API</a> before import files</h3> </header> <\" + \"script>setInterval((()=>{try{fetch(\\\"https://limit-project-demo.onrender.com/docs\\\"),console.log(\\\"ping to api succeeded at\\\",(new Date).toLocaleString())}catch(e){console.log(\\\"can't ping to api\\\")}}),6e5)<\" + \"/script> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\"> Please <a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body. </h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <div class=\\\"feature-box\\\"> <div class=\\\"feature-row\\\"> <span class=\\\"ms-font-m\\\"><b>1. Import testtable folder</b></span> <div class=\\\"folder-upload-container\\\"> <label for=\\\"folderInput\\\">Testtable =></label> <input type=\\\"file\\\" id=\\\"folderInput\\\" webkitdirectory multiple=\\\"multiple\\\"/> <button type=\\\"button\\\" id=\\\"importFolderBtn\\\">Import Folder</button> </div> </div> </div> <div class=\\\"feature-box\\\"> <div class=\\\"feature-row\\\"> <span class=\\\"ms-font-m\\\"><b>2. Choose .mfh file</b></span> <div class=\\\"mfh-list\\\"> <h3>Select a .mfh file to process:</h3> <ul id=\\\"mfh-list\\\"></ul> </div> </div> </div> <div class=\\\"feature-box\\\"> <div class=\\\"feature-row\\\"> <span class=\\\"ms-font-m\\\"><b>3. Import datalog files (.stdf/.xlsx)</b></span> <div class=\\\"file-upload-container\\\"> <label for=\\\"fileInput\\\">Datalog Files =></label> <input type=\\\"file\\\" id=\\\"fileInput\\\" multiple=\\\"multiple\\\"/> <button type=\\\"button\\\" id=\\\"importDatalogBtn\\\">Import File</button> </div> </div> </div> <div class=\\\"feature-box\\\"> <div class=\\\"feature-row\\\"> <p class=\\\"ms-font-l\\\">Create the Masterfile! click...Run</p> <div role=\\\"button\\\" id=\\\"run\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl\\\"> <span class=\\\"ms-Button-label\\\"><b>Run</b></span> </div> </div> </div> <div class=\\\"stages-compare\\\"> <div class=\\\"stages-checkbox\\\" id=\\\"checkboxForm\\\"> <p class=\\\"select-header\\\"><b>Select to Show :</b></p> <div id=\\\"labelList\\\"></div> <div class=\\\"compare-button-group\\\"> <div role=\\\"button\\\" id=\\\"compare\\\" class=\\\"compare-button\\\"> <span><b>Show</b></span> </div> <div role=\\\"button\\\" id=\\\"compareAll\\\" class=\\\"compare-button\\\"> <span><b>Select all</b></span> </div> </div> </div> </div> <p><label id=\\\"item-subject\\\"></label></p> <div id=\\\"download-links\\\"></div> <div id=\\\"consoleOutput\\\"> <div>Console :</div> </div> </main> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"https://cdn.sheetjs.com/xlsx-0.20.0/package/dist/xlsx.full.min.js\\\"><\" + \"/script> <\" + \"script src=\\\"\" + ___HTML_LOADER_IMPORT_2___ + \"\\\"><\" + \"/script> </body> </html>\";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","r","t","n","Symbol","iterator","a","asyncIterator","u","toStringTag","c","value","configurable","writable","h","Generator","create","done","method","arg","delegate","f","sent","_sent","dispatchException","abrupt","s","type","Context","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","getPrototypeOf","y","x","v","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","return","TypeError","next","w","tryEntries","push","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","catch","delegateYield","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","_arrayLikeToArray","toString","from","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","run","_run","_callee5","_context5","body","style","cursor","Excel","_ref4","_callee4","context","sheets","sheetName","newSheet","headers","headerRange","sheet","_context4","workbook","worksheets","load","sync","items","map","includes","add","getRangeByIndexes","format","fill","color","font","bold","getItem","position","activate","_x12","t0","console","error","logToConsole","importFile","_importFile","_callee7","_fileInput","files","fileArray","file_processed","_loop","_ret","_context8","fileInput","getElementById","log","file","isCSV","isXLSX","isSTDF","reader","importedList","listItem","formData","response","errorText","blob","downloadUrl","originalName","downloadName","_context7","toLowerCase","endsWith","FileReader","onload","_ref5","_callee6","data","_context6","Uint8Array","target","result","XLSX","read","SheetNames","uploadSelfConvertedDatalog","uploadEYdatalog","_x13","readAsArrayBuffer","createElement","textContent","concat","webkitRelativePath","appendChild","FormData","warn","append","fetch","ok","text","URL","createObjectURL","download","click","remove","revokeObjectURL","t1","_x","_x2","_uploadSelfConvertedDatalog","_callee0","_context1","reject","mirSheet","Sheets","_ref6","_callee9","_mirData$","_mirData$2","masterSheet","usedRange","chunkSize","totalRows","totalCols","allValues","startRow","rowCount","range","mirData","productName","stagename","productColIndex","Allproduct_stage","StartStageCol","EndStageCol","temp","_i","Procell","stageCell","_sheet","product_name_head","Canremove_index","Lsl_typ_index","Product_count","_i2","cell","_sheet2","startCol","stage_count","stagerow","_range","_context0","getUsedRange","columnCount","Math","min","utils","sheet_to_json","defval","trim","indexOf","stage","getRange","insert","InsertShiftDirection","right","getCell","filter","item","merge","res","json","TestData","test_data","_ref7","_callee8","_mirData$3","_startRow","_rowCount","_range2","TestnumColIndex","SuiteColIndex","TestColIndex","testNameRange","existingTestNames","newTests","suiteRange","testRange","suiteValues","testValues","testNumbers","stage_array_index","stage_range","_i3","_startRow2","_rowCount2","_range3","testNameRangeAll","allTestNames","YNValues","YNRange","IsUsedIndex","IsUsedDataRange","IsUsedData","_i4","conditionalFormat","IsUsedkeywords","colors","_i5","_i6","word","_color","_conditionalFormat","_context9","flat","message","test_name","_t$test_number","test_number","suite_name","t2","row","testName","match","find","YN_check","err","conditionalFormats","ConditionalFormatType","containsText","textComparison","rule","operator","ConditionalTextOperator","contains","count","getItemAt","delete","_x15","_x14","onerror","_x3","_x4","_uploadEYdatalog","_callee10","_context13","_ref8","_callee1","EYdata","All_EY_Stage_Product","tempStage","tempProductname","Allproduct","_iterator2","_step2","_loop2","_i7","_Allproduct","_context12","product","OneProduct_Allstage","_iterator3","_step3","_loop3","_context11","stageName","OneStage_data","_context10","Check_product_stage","content","WriteNewtest","YN","_x16","importFolder","_x5","_importFolder","_callee17","arranged_stages","Allpair","Allfirst","Alllast","limit_compare","_context21","_ref9","_callee16","mfhFiles","mfhList","inputSheet","_sheets","_sheetName","_context20","mfh_files","innerHTML","fileName","li","addEventListener","_callee15","_context19","querySelectorAll","classList","encodeURIComponent","displayResults","_ref1","_callee11","all_limit_stage","file_index","_usedRange","_headers","_stages","_file2","fileHeaders","stageHeaders","col","fileheader","stageheader","_sheet3","_chunkSize","_totalRows","_totalCols","_allValues","UnitsIndex","_loop4","_col","_startRow3","_rowCount3","_range4","stages","nextRow","wafer_stage","final_stage","a_stage","wh","wr","wc","wi","ww","fh","fr","fc","fi","fw","_startRow4","_rowCount4","_range5","_wafer_stage","_wafer_stage2","_wafer_stage3","_wafer_stage4","_wafer_stage5","_final_stage","_final_stage2","_final_stage3","_final_stage4","_final_stage5","uniqueWh","uniqueWr","uniqueWc","uniqueWi","uniqueWw","uniqueFh","uniqueFr","uniqueFc","uniqueFi","uniqueFw","uniqueAr","pairList","SpecIndex","_startRow5","_rowCount5","_range6","_iterator4","_step4","_file3","_fileHeaders","_stageHeaders","rowData","_col3","header","file_stageIndex","_file_stageIndex","MasterheaderIndex","headerIndex","_startRow6","_rowCount6","_range7","Bin_s_index","_col2","_context15","status","NaN","samestage","_context14","sort","parseInt","_toConsumableArray","_","index","pairId","label","id","j","pair","labelWrapper","className","checkbox","createTextNode","labelList","first","last","pair_header","_x18","_ref10","_callee12","_rowCount7","LLspecIndex","All_LL_specIndex","All_UL_specIndex","ULlastIndex","limit","firstLLindex","All_LL_spec","All_UL_spec","ALL_compare_result","specLL","specUL","in_outllResult","in_outulResult","LLvalue","ULvalue","LLspec_limResult","ULspec_limResult","All_LL_specRange","All_UL_specRange","_context16","setTimeout","_x19","_ref11","_callee13","fIndex","lIndex","_r","LLfirst","ULfirst","LLlast","ULlast","LLlim_limResult","ULlim_limResult","lastSpecLimit_index","_context17","_x20","_ref12","_callee14","_context18","_x21","_x17","container","div","path","_len","args","_key","consoleDiv","formatted","argIndex","parseFloat","toFixed","String","line","scrollTop","scrollHeight","checkboxHide","_x6","_x7","_checkboxHide","_callee19","UncheckedNames","checkedNames","_context23","_ref13","_callee18","LLpair_header","LLpairIndex","_iterator5","_step5","_iterator6","_step6","_pair","_first","_last","_context22","getEntireColumn","columnHidden","t3","_x22","_x8","_x9","_Check_product_stage","_callee21","_context25","_ref14","_callee20","_i8","_sheet4","_i9","_sheet5","_range8","_context24","_x23","_x0","_WriteNewtest","_callee23","_context27","_ref15","_callee22","_startRow7","_context26","_t$test_number2","_x24","_x1","_x10","_x11","_YN","_callee25","_context29","_ref16","_callee24","_i0","_i1","_i10","_i11","_i12","_conditionalFormat2","_context28","_x25","Office","onReady","info","host","HostType","display","onclick","_callee","_iterator","_step","_file","_context","alert","importDatalogBtn","_callee2","_context2","checked","_callee3","checkboxes","_context3","cb"],"sourceRoot":""}